"""
模块是Python程序架构的一个核心概念
- 每个以扩展名`py`结尾的`python`源代码文件都是一个 模块
- 模块名 同样也是一个标识符，需要符合标识符命名规则
- 在模块中定义的 全局变量、函数、类， 都是提供给外界 直接 使用的工具
- 模块 就好比是一个工具包，要想使用这个工具包，需要先 导入 这个模块

--------------------------------------------------------------
模块的两种导入方式：
1. import 模块名
    - 每个模块导入应该独占一行
    - 导入后，通过 `模块名.工具名` 的格式使用模块提供的工具 -- 全局变量、函数、类
如果模块名称太长，可以使用`as`指定模块的别名,模块的别名应该符合 大驼峰 命名法
import 模块名 as 别名

2. from 模块名 import 工具名
    - 直接使用`工具名`直接使用工具
    - 如果导入的两个模块中有相同名称的函数，后导入的会覆盖先导入的
    - 开发时，`import`代码应统一写在 代码顶部，更容易及时发现冲突
    - 遇到冲突，可以使用`as`关键字取别名解决冲突

3.from 模块名 import * (不推荐！！！)
    - 这样可以导入模块中所有的工具，且可以直接使用`工具名`使用工具
    - 但是这样导入完全不知道有没有名称冲突，出了问题不好查

--------------------------------------------------------------
python中每一个模块都有一个内置属性 `__file__` ，该文件记录了模块的完整路径

"""

# 查看random模块的文件路径
import random
print(random.__file__)
